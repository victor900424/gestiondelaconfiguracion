name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Asegura que se obtenga todo el historial del repo

    - name: List directory contents
      run: ls -la  # Verifica la estructura del directorio

    - name: Move to project directory
      run: cd gestiondelaconfiguracion/MyApiApplication && ls -la  # Confirma que el pom.xml está ahí

    - name: Set up JDK 23
      uses: actions/setup-java@v1
      with:
        java-version: '23'

    - name: Build with Maven
      run: mvn -B clean package
      working-directory: gestiondelaconfiguracion/MyApiApplication  # Ejecuta Maven dentro del proyecto

    - name: Run Unit Tests
      run: mvn test
      working-directory: gestiondelaconfiguracion/MyApiApplication

    - name: Run Functional Tests
      run: mvn verify
      working-directory: gestiondelaconfiguracion/MyApiApplication

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/MyApiApplication:latest .
      working-directory: gestiondelaconfiguracion/MyApiApplication
    
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/MyApiApplication:latest

    - name: Create Git Tag
      id: tag
      run: echo "tag=$(echo ${GITHUB_REF##*/}-$(date +%Y%m%d%H%M%S))" >> $GITHUB_ENV

    - name: Push Git Tag
      run: git tag ${{ env.tag }} && git push origin ${{ env.tag }}

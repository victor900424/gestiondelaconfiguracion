name: Release Pipeline

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # Permite crear releases y subir assets a GitHub

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        working-directory: MyApiApplication
        run: mvn clean package

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: MyApiApplication/target/MyApiApplication-0.0.1-SNAPSHOT.jar
          asset_name: MyApiApplication-${{ github.ref_name }}.jar
          asset_content_type: application/java-archive

  docker:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker image
        working-directory: MyApiApplication
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/myapi:${{ github.ref_name }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/myapi:${{ github.ref_name }}
